# -*- coding: utf-8 -*-
"""schedule

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PhTXUvy2FBIDORJMYekUT4K4o5CSz9qd
"""

'''
Program: schedule.py. 

Programmer: Omar Shatrat

Date: 10/25/2022

Description: Program that makes a round robin schedule for a list of names.

'''

# CS 131B Project 8

def generate_round_robin_schedule(param):
  # The round robin function takes a list as a parameter and adds 'bye' as an element if the list contains an odd number of elements. 
  # The function then splits the list in two, reverses the 2nd list, and appends a tuple containing the first elements in each of the newly split lists to another list. 
  # Finally, the list is shifted and the process repeats until every element is paired with every other element. The list of pairs is the return value.
  paramc = list(param)
  pairs = []
  
  if len(paramc) % 2 != 0:
    paramc.append('bye')

  for i in range(len(paramc)-1):
    split = int(len(paramc)/2)
    l1 = paramc[0:split]
    l2 = paramc[split:]
    l2.reverse()
    
    for i in range(len(l1)):
      pairs.append((l1[i], l2[i]))
    
    paramc = [paramc[0]] + [paramc[-1]] + paramc[1:len(paramc)-1]
  
  return pairs
    

pairs = generate_round_robin_schedule(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'])
print(pairs)

'''Sample run 1

pairs = generate_round_robin_schedule(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'])
print(pairs)

[('A', 'H'), ('B', 'G'), ('C', 'F'), ('D', 'E'), ('A', 'G'), ('H', 'F'), ('B', 'E'), 
('C', 'D'), ('A', 'F'), ('G', 'E'), ('H', 'D'), ('B', 'C'), ('A', 'E'), ('F', 'D'), 
('G', 'C'), ('H', 'B'), ('A', 'D'), ('E', 'C'), ('F', 'B'), ('G', 'H'), ('A', 'C'), 
('D', 'B'), ('E', 'H'), ('F', 'G'), ('A', 'B'), ('C', 'H'), ('D', 'G'), ('E', 'F')]

'''

'''Sample run 2

pairs = generate_round_robin_schedule(['A', 'B', 'C', 'D', 'E', 'F', 'G'])
print(pairs)

[('A', 'bye'), ('B', 'G'), ('C', 'F'), ('D', 'E'), ('A', 'G'), ('bye', 'F'), ('B', 'E'), 
('C', 'D'), ('A', 'F'), ('G', 'E'), ('bye', 'D'), ('B', 'C'), ('A', 'E'), ('F', 'D'), 
('G', 'C'), ('bye', 'B'), ('A', 'D'), ('E', 'C'), ('F', 'B'), ('G', 'bye'), ('A', 'C'), 
('D', 'B'), ('E', 'bye'), ('F', 'G'), ('A', 'B'), ('C', 'bye'), ('D', 'G'), ('E', 'F')]

'''